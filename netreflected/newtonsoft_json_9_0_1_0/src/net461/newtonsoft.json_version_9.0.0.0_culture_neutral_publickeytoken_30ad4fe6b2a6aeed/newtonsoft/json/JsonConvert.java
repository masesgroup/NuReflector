/*
 *  MIT License
 *
 *  Copyright (c) 2022 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package newtonsoft.json;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import newtonsoft.json.JsonSerializerSettings;
import newtonsoft.json.JsonConverter;
import newtonsoft.json.Formatting;
import system.xml.XmlNode;
import system.xml.linq.XObject;
import system.SByte;
import system.Single;
import system.DateTime;
import newtonsoft.json.DateFormatHandling;
import newtonsoft.json.DateTimeZoneHandling;
import system.DateTimeOffset;
import system.Decimal;
import system.Enum;
import system.Guid;
import newtonsoft.json.StringEscapeHandling;
import system.TimeSpan;
import system.Uri;
import system.UInt16;
import system.UInt32;
import system.UInt64;
import system.threading.tasks.Task;
import system.xml.linq.XDocument;
import system.xml.XmlDocument;


/**
 * The base .NET class managing Newtonsoft.Json.JsonConvert, Newtonsoft.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed.
 * <p>
 * 
 * See: <a href="https://docs.microsoft.com/en-us/dotnet/api/Newtonsoft.Json.JsonConvert" target="_top">https://docs.microsoft.com/en-us/dotnet/api/Newtonsoft.Json.JsonConvert</a>
 */
public class JsonConvert extends NetObject  {
    /**
     * Fully assembly qualified name: Newtonsoft.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
     */
    public static final String assemblyFullName = "Newtonsoft.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed";
    /**
     * Assembly name: Newtonsoft.Json
     */
    public static final String assemblyShortName = "Newtonsoft.Json";
    /**
     * Qualified class name: Newtonsoft.Json.JsonConvert
     */
    public static final String className = "Newtonsoft.Json.JsonConvert";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public JsonConvert(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link JsonConvert}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link JsonConvert} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static JsonConvert cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new JsonConvert(from.getJCOInstance());
    }

    // Constructors section
    
    public JsonConvert() throws Throwable {
    }

    
    // Methods section
    
    public static NetObject DeserializeObject(java.lang.String value) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, system.FormatException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeObject = (JCObject)classType.Invoke("DeserializeObject", value);
            return new NetObject(objDeserializeObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject DeserializeObject(java.lang.String value, JsonSerializerSettings settings) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, system.FormatException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeObject = (JCObject)classType.Invoke("DeserializeObject", value, settings == null ? null : settings.getJCOInstance());
            return new NetObject(objDeserializeObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject DeserializeObject(java.lang.String value, NetType type) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, system.FormatException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeObject = (JCObject)classType.Invoke("DeserializeObject", value, type == null ? null : type.getJCOInstance());
            return new NetObject(objDeserializeObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject DeserializeObject(java.lang.String value, NetType type, JsonConverter... converters) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, system.FormatException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeObject = (JCObject)classType.Invoke("DeserializeObject", value, type == null ? null : type.getJCOInstance(), toObjectFromArray(converters));
            return new NetObject(objDeserializeObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject DeserializeObject(java.lang.String value, NetType type, JsonSerializerSettings settings) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, system.NullReferenceException, system.globalization.CultureNotFoundException, system.FormatException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException, newtonsoft.json.JsonWriterException, system.OutOfMemoryException, system.NotImplementedException, system.runtime.serialization.SerializationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeObject = (JCObject)classType.Invoke("DeserializeObject", value, type == null ? null : type.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
            return new NetObject(objDeserializeObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, Formatting formatting) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, Formatting formatting, JsonConverter... converters) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance(), toObjectFromArray(converters));
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, Formatting formatting, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, JsonConverter... converters) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), toObjectFromArray(converters));
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, NetType type, Formatting formatting, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException, system.NotImplementedException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), type == null ? null : type.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeObject(NetObject value, NetType type, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException, system.NotImplementedException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeObject", value == null ? null : value.getJCOInstance(), type == null ? null : type.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXmlNode(XmlNode node) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.IndexOutOfRangeException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXmlNode", node == null ? null : node.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXmlNode(XmlNode node, Formatting formatting) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXmlNode", node == null ? null : node.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXmlNode(XmlNode node, Formatting formatting, boolean omitRootObject) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXmlNode", node == null ? null : node.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance(), omitRootObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXNode(XObject node) throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXNode", node == null ? null : node.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXNode(XObject node, Formatting formatting) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.IndexOutOfRangeException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXNode", node == null ? null : node.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String SerializeXNode(XObject node, Formatting formatting, boolean omitRootObject) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.IndexOutOfRangeException, system.ArgumentException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonWriterException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("SerializeXNode", node == null ? null : node.getJCOInstance(), formatting == null ? null : formatting.getJCOInstance(), omitRootObject);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(boolean value) throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(byte value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(char value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(double value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(short value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(int value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(long value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(SByte value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Single value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(DateTime value) throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentException, system.OverflowException, system.ArgumentNullException, system.FormatException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling) throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentException, system.OverflowException, system.ArgumentNullException, system.InvalidOperationException, system.IndexOutOfRangeException, system.FormatException, system.globalization.CultureNotFoundException, system.NullReferenceException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance(), format == null ? null : format.getJCOInstance(), timeZoneHandling == null ? null : timeZoneHandling.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(DateTimeOffset value) throws Throwable, system.ArgumentNullException, system.FormatException, system.ArgumentOutOfRangeException, system.ArgumentException, system.OverflowException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.OutOfMemoryException, system.NullReferenceException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(DateTimeOffset value, DateFormatHandling format) throws Throwable, system.ArgumentNullException, system.FormatException, system.ArgumentOutOfRangeException, system.ArgumentException, system.OverflowException, system.InvalidOperationException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.OutOfMemoryException, system.NullReferenceException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance(), format == null ? null : format.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Decimal value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Enum value) throws Throwable, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.FormatException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Guid value) throws Throwable, system.FormatException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(NetObject value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.IndexOutOfRangeException, system.OverflowException, system.FormatException, system.OutOfMemoryException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(java.lang.String value) throws Throwable, system.ArgumentException, system.ArgumentNullException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(java.lang.String value, char delimiter) throws Throwable, system.ArgumentException, system.ArgumentNullException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value, delimiter);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(java.lang.String value, char delimiter, StringEscapeHandling stringEscapeHandling) throws Throwable, system.ArgumentException, system.ArgumentNullException, system.FormatException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value, delimiter, stringEscapeHandling == null ? null : stringEscapeHandling.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(TimeSpan value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Uri value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(UInt16 value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(UInt32 value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(UInt64 value) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("ToString", value == null ? null : value.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Task PopulateObjectAsync(java.lang.String value, NetObject target, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonReaderException, system.InvalidOperationException, system.ObjectDisposedException, system.diagnostics.tracing.EventSourceException, system.threading.tasks.TaskSchedulerException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objPopulateObjectAsync = (JCObject)classType.Invoke("PopulateObjectAsync", value, target == null ? null : target.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
            return new Task(objPopulateObjectAsync);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XDocument DeserializeXNode(java.lang.String value) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXNode = (JCObject)classType.Invoke("DeserializeXNode", value);
            return new XDocument(objDeserializeXNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XDocument DeserializeXNode(java.lang.String value, java.lang.String deserializeRootElementName) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXNode = (JCObject)classType.Invoke("DeserializeXNode", value, deserializeRootElementName);
            return new XDocument(objDeserializeXNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XDocument DeserializeXNode(java.lang.String value, java.lang.String deserializeRootElementName, boolean writeArrayAttribute) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXNode = (JCObject)classType.Invoke("DeserializeXNode", value, deserializeRootElementName, writeArrayAttribute);
            return new XDocument(objDeserializeXNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XmlDocument DeserializeXmlNode(java.lang.String value) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXmlNode = (JCObject)classType.Invoke("DeserializeXmlNode", value);
            return new XmlDocument(objDeserializeXmlNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XmlDocument DeserializeXmlNode(java.lang.String value, java.lang.String deserializeRootElementName) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException, system.InvalidOperationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXmlNode = (JCObject)classType.Invoke("DeserializeXmlNode", value, deserializeRootElementName);
            return new XmlDocument(objDeserializeXmlNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static XmlDocument DeserializeXmlNode(java.lang.String value, java.lang.String deserializeRootElementName, boolean writeArrayAttribute) throws Throwable, system.ArgumentNullException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonReaderException, newtonsoft.json.JsonSerializationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDeserializeXmlNode = (JCObject)classType.Invoke("DeserializeXmlNode", value, deserializeRootElementName, writeArrayAttribute);
            return new XmlDocument(objDeserializeXmlNode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void PopulateObject(java.lang.String value, NetObject target) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonReaderException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("PopulateObject", value, target == null ? null : target.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void PopulateObject(java.lang.String value, NetObject target, JsonSerializerSettings settings) throws Throwable, system.NotSupportedException, system.ArgumentOutOfRangeException, system.MulticastNotSupportedException, system.ArgumentNullException, system.ArgumentException, system.IndexOutOfRangeException, newtonsoft.json.JsonSerializationException, newtonsoft.json.JsonReaderException, system.FormatException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("PopulateObject", value, target == null ? null : target.getJCOInstance(), settings == null ? null : settings.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    


    // Instance Events section
    

}