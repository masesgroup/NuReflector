/*
 *  MIT License
 *
 *  Copyright (c) 2022 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package ibm.data.db2;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import ibm.data.db2.InternalStruct6;
import ibm.data.db2types.DB2Xml;


/**
 * The base .NET class managing IBM.Data.Db2.DB2ConnPool, IBM.Data.Db2, Version=6.0.0.200, Culture=neutral, PublicKeyToken=7c307b91aa13d208.
 * <p>
 * 
 * See: <a href="https://docs.microsoft.com/en-us/dotnet/api/IBM.Data.Db2.DB2ConnPool" target="_top">https://docs.microsoft.com/en-us/dotnet/api/IBM.Data.Db2.DB2ConnPool</a>
 */
public class DB2ConnPool extends NetObject  {
    /**
     * Fully assembly qualified name: IBM.Data.Db2, Version=6.0.0.200, Culture=neutral, PublicKeyToken=7c307b91aa13d208
     */
    public static final String assemblyFullName = "IBM.Data.Db2, Version=6.0.0.200, Culture=neutral, PublicKeyToken=7c307b91aa13d208";
    /**
     * Assembly name: IBM.Data.Db2
     */
    public static final String assemblyShortName = "IBM.Data.Db2";
    /**
     * Qualified class name: IBM.Data.Db2.DB2ConnPool
     */
    public static final String className = "IBM.Data.Db2.DB2ConnPool";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public DB2ConnPool(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link DB2ConnPool}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link DB2ConnPool} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static DB2ConnPool cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new DB2ConnPool(from.getJCOInstance());
    }

    // Constructors section
    
    public DB2ConnPool() throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ObjectDisposedException, system.ArrayTypeMismatchException, system.threading.AbandonedMutexException, system.IndexOutOfRangeException, system.OutOfMemoryException, system.FormatException, system.globalization.CultureNotFoundException, system.InvalidCastException, system.runtime.serialization.SerializationException, system.reflection.AmbiguousMatchException, system.UriFormatException, system.InvalidTimeZoneException, system.OverflowException, system.security.SecurityException, system.MissingMemberException, system.componentmodel.Win32Exception, system.MissingMethodException, system.reflection.TargetInvocationException, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        try {
            // add reference to assemblyName.dll file
            addReference(JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            setJCOInstance((JCObject)classType.NewObject());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Methods section
    
    public static boolean InternalOperation10() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("InternalOperation10");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean InternalOperation23(java.lang.String szLicenseFileName) throws Throwable {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            return (boolean)classInstance.Invoke("InternalOperation23", szLicenseFileName);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean InternalOperation26() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.FormatException, system.globalization.CultureNotFoundException, system.InvalidCastException, system.InvalidOperationException, system.reflection.AmbiguousMatchException, system.UriFormatException, system.InvalidTimeZoneException, system.OverflowException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException, system.RankException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("InternalOperation26");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static InternalStruct6 ParseInternalProperty9(java.lang.String CmdLindFilterInfo) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.globalization.CultureNotFoundException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objParseInternalProperty9 = (JCObject)classType.Invoke("ParseInternalProperty9", CmdLindFilterInfo);
            return new InternalStruct6(objParseInternalProperty9);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DB2Xml InternalOperation4(byte[] baXml) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.RankException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objInternalOperation4 = (JCObject)classType.Invoke("InternalOperation4", (java.lang.Object)baXml);
            return new DB2Xml(objInternalOperation4);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DB2Xml InternalOperation4(JCORefOut dupParam0) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.RankException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objInternalOperation4 = (JCObject)classType.Invoke("InternalOperation4", (java.lang.Object)dupParam0.getJCRefOut());
            return new DB2Xml(objInternalOperation4);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int InternalOperation11(java.lang.String debugInfo, int iCommandTimeout) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.InvalidOperationException, system.FormatException, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, system.runtime.interopservices.ExternalException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("InternalOperation11", debugInfo, iCommandTimeout);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int InternalOperation14() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("InternalOperation14");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int InternalOperation15(JCORefOut szConn) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.RankException, system.ArrayTypeMismatchException, system.InvalidOperationException, system.threading.WaitHandleCannotBeOpenedException, system.AccessViolationException, system.FormatException, system.runtime.interopservices.ExternalException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("InternalOperation15", szConn.getJCRefOut());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int InternalOperation29() throws Throwable, system.PlatformNotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.NotSupportedException, system.FormatException, system.RankException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException, system.MethodAccessException, system.MissingMethodException, system.MemberAccessException, system.reflection.TargetInvocationException, system.AccessViolationException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("InternalOperation29");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation12() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation12");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation13() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation13");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation21() throws Throwable, system.PlatformNotSupportedException, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.IndexOutOfRangeException, system.UriFormatException, system.NotSupportedException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation21");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation22() throws Throwable, system.PlatformNotSupportedException, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.FormatException, system.IndexOutOfRangeException, system.UriFormatException, system.NotSupportedException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation22");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation27(java.lang.String testconnConnStr, boolean doConnect) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.InvalidOperationException, system.FormatException, system.OverflowException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation27", testconnConnStr, doConnect);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation3(NetArrayList traceList, boolean trace_dump_flag) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.threading.AbandonedMutexException, system.OutOfMemoryException, system.text.regularexpressions.RegexParseException, system.text.regularexpressions.RegexMatchTimeoutException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation3", traceList == null ? null : traceList.getJCOInstance(), trace_dump_flag);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation7() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation7");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String InternalOperation9() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("InternalOperation9");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation1() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.OutOfMemoryException, system.InvalidOperationException, system.text.regularexpressions.RegexParseException, system.text.regularexpressions.RegexMatchTimeoutException, ibm.data.db2.DB2Exception, system.ApplicationException, system.componentmodel.Win32Exception, system.AccessViolationException, system.globalization.CultureNotFoundException, system.diagnostics.tracing.EventSourceException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation1");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation16(java.lang.String strDBName, java.lang.String strFile, java.lang.String strServer, java.lang.String strService, java.lang.String strUID, java.lang.String strPWD) throws Throwable, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.FormatException, system.OverflowException, system.NotSupportedException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation16", strDBName, strFile, strServer, strService, strUID, strPWD);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation17(java.lang.String strDBName, java.lang.String strServer, java.lang.String strService, java.lang.String strUID, java.lang.String strPWD, java.lang.String strMode) throws Throwable, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.FormatException, system.OverflowException, system.NotSupportedException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation17", strDBName, strServer, strService, strUID, strPWD, strMode);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation18(java.lang.String strDBName, java.lang.String strServer, java.lang.String strService, java.lang.String strUID, java.lang.String strPWD) throws Throwable, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.FormatException, system.OverflowException, system.NotSupportedException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation18", strDBName, strServer, strService, strUID, strPWD);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation19(boolean forceInitFailure) throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation19", forceInitFailure);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation2(boolean bTrace) throws Throwable, system.PlatformNotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.NotSupportedException, system.ObjectDisposedException, system.runtime.serialization.SerializationException, system.threading.AbandonedMutexException, system.OutOfMemoryException, system.reflection.AmbiguousMatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation2", bTrace);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation20(java.lang.String szCodebase) throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation20", szCodebase);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation25() throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ObjectDisposedException, system.ArrayTypeMismatchException, system.threading.AbandonedMutexException, system.IndexOutOfRangeException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation25");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation28(java.lang.String strDBName, java.lang.String strFile, java.lang.String strServer, java.lang.String strService, java.lang.String strUID, java.lang.String strPWD, java.lang.String strOptions) throws Throwable, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.FormatException, system.OverflowException, system.NotSupportedException, system.componentmodel.Win32Exception, system.AccessViolationException, system.threading.WaitHandleCannotBeOpenedException, ibm.data.db2.DB2Exception, system.ApplicationException, system.text.regularexpressions.RegexParseException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation28", strDBName, strFile, strServer, strService, strUID, strPWD, strOptions);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation3() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.IndexOutOfRangeException, system.OutOfMemoryException, system.RankException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation3");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation3(NetArrayList traceList) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.IndexOutOfRangeException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation3", traceList == null ? null : traceList.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation31(JCORefOut IncphrOutplntxt) throws Throwable, system.PlatformNotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.NotSupportedException, system.FormatException, system.RankException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation31", IncphrOutplntxt.getJCRefOut());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation32(JCORefOut InplnOutcphrtxt) throws Throwable, system.PlatformNotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.NotSupportedException, system.FormatException, system.RankException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation32", InplnOutcphrtxt.getJCRefOut());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation33(JCORefOut IncphrOutplntxt) throws Throwable, system.PlatformNotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.NotSupportedException, system.FormatException, system.RankException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation33", IncphrOutplntxt.getJCRefOut());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation5() throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation5");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void InternalOperation8(boolean value) throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("InternalOperation8", value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetDebugInfo(java.lang.String debugInfo) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ObjectDisposedException, system.ArrayTypeMismatchException, system.threading.AbandonedMutexException, system.IndexOutOfRangeException, system.OutOfMemoryException, system.globalization.CultureNotFoundException, system.runtime.interopservices.ExternalException, system.FormatException, system.diagnostics.tracing.EventSourceException, system.net.sockets.SocketException, system.MissingMemberException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("SetDebugInfo", debugInfo);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static void SetQuoteIgnore(int iIgnore) throws Throwable {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            classType.Invoke("SetQuoteIgnore", iIgnore);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public static java.lang.String getInternalProperty1() throws Throwable, system.PlatformNotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.threading.AbandonedMutexException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentException, system.OutOfMemoryException, system.NotSupportedException, system.FormatException, system.RankException, system.ArrayTypeMismatchException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Get("InternalProperty1");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}