/*
 *  MIT License
 *
 *  Copyright (c) 2022 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package mysql.data.mysqlclient;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;

// Import section
// PACKAGE_IMPORT_SECTION

/**
 * The base .NET class managing MySql.Data.MySqlClient.MySqlErrorCode, MySql.Data, Version=8.0.22.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d.
 * <p>
 * 
 * See: <a href="https://docs.microsoft.com/en-us/dotnet/api/MySql.Data.MySqlClient.MySqlErrorCode" target="_top">https://docs.microsoft.com/en-us/dotnet/api/MySql.Data.MySqlClient.MySqlErrorCode</a>
 */
public class MySqlErrorCode extends NetObject  {
    /**
     * Fully assembly qualified name: MySql.Data, Version=8.0.22.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d
     */
    public static final String assemblyFullName = "MySql.Data, Version=8.0.22.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d";
    /**
     * Assembly name: MySql.Data
     */
    public static final String assemblyShortName = "MySql.Data";
    /**
     * Qualified class name: MySql.Data.MySqlClient.MySqlErrorCode
     */
    public static final String className = "MySql.Data.MySqlClient.MySqlErrorCode";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumReflected = createEnum();
    JCEnum classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    static JCEnum createEnum() {
        try {
            String enumToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating Enum %s", enumToCreate);
            JCEnum enumCreated = bridge.GetEnum(enumToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created Enum: %s",
                        (enumCreated != null) ? enumCreated.toString() : "Returned null value");
            return enumCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public MySqlErrorCode(java.lang.Object instance) {
        super(instance);
        if (instance instanceof JCObject) {
            try {
                String enumName = NetEnum.GetName(classType, (JCObject)instance);
                classInstance = enumReflected.fromValue(enumName);
            } catch (Throwable t) {
                JCOReflector.writeLog(t);
                classInstance = enumReflected;
            }
        } else if (instance instanceof JCEnum) {
            classInstance = (JCEnum)instance;
        }
    }

    public MySqlErrorCode() {
        super();
        // add reference to assemblyName.dll file
        try {
            addReference(JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
        } catch (Throwable jcne) {
            JCOReflector.writeLog(jcne);
        }
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public JCType getJCOType() {
        return classType;
    }

    final static MySqlErrorCode getFrom(JCEnum object, String value) {
        try {
            return new MySqlErrorCode(object.fromValue(value));
        } catch (JCException e) {
            return new MySqlErrorCode(object);
        }
    }

    // Enum fields section
    
    public static MySqlErrorCode None = getFrom(enumReflected, "None");
    public static MySqlErrorCode HashCheck = getFrom(enumReflected, "HashCheck");
    public static MySqlErrorCode ISAMCheck = getFrom(enumReflected, "ISAMCheck");
    public static MySqlErrorCode No = getFrom(enumReflected, "No");
    public static MySqlErrorCode Yes = getFrom(enumReflected, "Yes");
    public static MySqlErrorCode CannotCreateFile = getFrom(enumReflected, "CannotCreateFile");
    public static MySqlErrorCode CannotCreateTable = getFrom(enumReflected, "CannotCreateTable");
    public static MySqlErrorCode CannotCreateDatabase = getFrom(enumReflected, "CannotCreateDatabase");
    public static MySqlErrorCode DatabaseCreateExists = getFrom(enumReflected, "DatabaseCreateExists");
    public static MySqlErrorCode DatabaseDropExists = getFrom(enumReflected, "DatabaseDropExists");
    public static MySqlErrorCode DatabaseDropDelete = getFrom(enumReflected, "DatabaseDropDelete");
    public static MySqlErrorCode DatabaseDropRemoveDir = getFrom(enumReflected, "DatabaseDropRemoveDir");
    public static MySqlErrorCode CannotDeleteFile = getFrom(enumReflected, "CannotDeleteFile");
    public static MySqlErrorCode CannotFindSystemRecord = getFrom(enumReflected, "CannotFindSystemRecord");
    public static MySqlErrorCode CannotGetStatus = getFrom(enumReflected, "CannotGetStatus");
    public static MySqlErrorCode CannotGetWorkingDirectory = getFrom(enumReflected, "CannotGetWorkingDirectory");
    public static MySqlErrorCode CannotLock = getFrom(enumReflected, "CannotLock");
    public static MySqlErrorCode CannotOpenFile = getFrom(enumReflected, "CannotOpenFile");
    public static MySqlErrorCode FileNotFound = getFrom(enumReflected, "FileNotFound");
    public static MySqlErrorCode CannotReadDirectory = getFrom(enumReflected, "CannotReadDirectory");
    public static MySqlErrorCode CannotSetWorkingDirectory = getFrom(enumReflected, "CannotSetWorkingDirectory");
    public static MySqlErrorCode CheckRead = getFrom(enumReflected, "CheckRead");
    public static MySqlErrorCode DiskFull = getFrom(enumReflected, "DiskFull");
    public static MySqlErrorCode DuplicateKey = getFrom(enumReflected, "DuplicateKey");
    public static MySqlErrorCode ErrorOnClose = getFrom(enumReflected, "ErrorOnClose");
    public static MySqlErrorCode ErrorOnRead = getFrom(enumReflected, "ErrorOnRead");
    public static MySqlErrorCode ErrorOnRename = getFrom(enumReflected, "ErrorOnRename");
    public static MySqlErrorCode ErrorOnWrite = getFrom(enumReflected, "ErrorOnWrite");
    public static MySqlErrorCode FileUsed = getFrom(enumReflected, "FileUsed");
    public static MySqlErrorCode FileSortAborted = getFrom(enumReflected, "FileSortAborted");
    public static MySqlErrorCode FormNotFound = getFrom(enumReflected, "FormNotFound");
    public static MySqlErrorCode GetErrorNumber = getFrom(enumReflected, "GetErrorNumber");
    public static MySqlErrorCode IllegalHA = getFrom(enumReflected, "IllegalHA");
    public static MySqlErrorCode KeyNotFound = getFrom(enumReflected, "KeyNotFound");
    public static MySqlErrorCode NotFormFile = getFrom(enumReflected, "NotFormFile");
    public static MySqlErrorCode NotKeyFile = getFrom(enumReflected, "NotKeyFile");
    public static MySqlErrorCode OldKeyFile = getFrom(enumReflected, "OldKeyFile");
    public static MySqlErrorCode OpenAsReadOnly = getFrom(enumReflected, "OpenAsReadOnly");
    public static MySqlErrorCode OutOfMemory = getFrom(enumReflected, "OutOfMemory");
    public static MySqlErrorCode OutOfSortMemory = getFrom(enumReflected, "OutOfSortMemory");
    public static MySqlErrorCode UnexepectedEOF = getFrom(enumReflected, "UnexepectedEOF");
    public static MySqlErrorCode ConnectionCountError = getFrom(enumReflected, "ConnectionCountError");
    public static MySqlErrorCode OutOfResources = getFrom(enumReflected, "OutOfResources");
    public static MySqlErrorCode UnableToConnectToHost = getFrom(enumReflected, "UnableToConnectToHost");
    public static MySqlErrorCode HandshakeError = getFrom(enumReflected, "HandshakeError");
    public static MySqlErrorCode DatabaseAccessDenied = getFrom(enumReflected, "DatabaseAccessDenied");
    public static MySqlErrorCode AccessDenied = getFrom(enumReflected, "AccessDenied");
    public static MySqlErrorCode NoDatabaseSelected = getFrom(enumReflected, "NoDatabaseSelected");
    public static MySqlErrorCode UnknownCommand = getFrom(enumReflected, "UnknownCommand");
    public static MySqlErrorCode ColumnCannotBeNull = getFrom(enumReflected, "ColumnCannotBeNull");
    public static MySqlErrorCode UnknownDatabase = getFrom(enumReflected, "UnknownDatabase");
    public static MySqlErrorCode TableExists = getFrom(enumReflected, "TableExists");
    public static MySqlErrorCode BadTable = getFrom(enumReflected, "BadTable");
    public static MySqlErrorCode NonUnique = getFrom(enumReflected, "NonUnique");
    public static MySqlErrorCode ServerShutdown = getFrom(enumReflected, "ServerShutdown");
    public static MySqlErrorCode BadFieldError = getFrom(enumReflected, "BadFieldError");
    public static MySqlErrorCode WrongFieldWithGroup = getFrom(enumReflected, "WrongFieldWithGroup");
    public static MySqlErrorCode WrongGroupField = getFrom(enumReflected, "WrongGroupField");
    public static MySqlErrorCode WrongSumSelected = getFrom(enumReflected, "WrongSumSelected");
    public static MySqlErrorCode WrongValueCount = getFrom(enumReflected, "WrongValueCount");
    public static MySqlErrorCode TooLongIdentifier = getFrom(enumReflected, "TooLongIdentifier");
    public static MySqlErrorCode DuplicateFieldName = getFrom(enumReflected, "DuplicateFieldName");
    public static MySqlErrorCode DuplicateKeyName = getFrom(enumReflected, "DuplicateKeyName");
    public static MySqlErrorCode DuplicateKeyEntry = getFrom(enumReflected, "DuplicateKeyEntry");
    public static MySqlErrorCode WrongFieldSpecifier = getFrom(enumReflected, "WrongFieldSpecifier");
    public static MySqlErrorCode ParseError = getFrom(enumReflected, "ParseError");
    public static MySqlErrorCode EmptyQuery = getFrom(enumReflected, "EmptyQuery");
    public static MySqlErrorCode NonUniqueTable = getFrom(enumReflected, "NonUniqueTable");
    public static MySqlErrorCode InvalidDefault = getFrom(enumReflected, "InvalidDefault");
    public static MySqlErrorCode MultiplePrimaryKey = getFrom(enumReflected, "MultiplePrimaryKey");
    public static MySqlErrorCode TooManyKeys = getFrom(enumReflected, "TooManyKeys");
    public static MySqlErrorCode TooManyKeysParts = getFrom(enumReflected, "TooManyKeysParts");
    public static MySqlErrorCode TooLongKey = getFrom(enumReflected, "TooLongKey");
    public static MySqlErrorCode KeyColumnDoesNotExist = getFrom(enumReflected, "KeyColumnDoesNotExist");
    public static MySqlErrorCode BlobUsedAsKey = getFrom(enumReflected, "BlobUsedAsKey");
    public static MySqlErrorCode TooBigFieldLength = getFrom(enumReflected, "TooBigFieldLength");
    public static MySqlErrorCode WrongAutoKey = getFrom(enumReflected, "WrongAutoKey");
    public static MySqlErrorCode Ready = getFrom(enumReflected, "Ready");
    public static MySqlErrorCode NormalShutdown = getFrom(enumReflected, "NormalShutdown");
    public static MySqlErrorCode GotSignal = getFrom(enumReflected, "GotSignal");
    public static MySqlErrorCode ShutdownComplete = getFrom(enumReflected, "ShutdownComplete");
    public static MySqlErrorCode ForcingClose = getFrom(enumReflected, "ForcingClose");
    public static MySqlErrorCode IPSocketError = getFrom(enumReflected, "IPSocketError");
    public static MySqlErrorCode NoSuchIndex = getFrom(enumReflected, "NoSuchIndex");
    public static MySqlErrorCode WrongFieldTerminators = getFrom(enumReflected, "WrongFieldTerminators");
    public static MySqlErrorCode BlobsAndNoTerminated = getFrom(enumReflected, "BlobsAndNoTerminated");
    public static MySqlErrorCode TextFileNotReadable = getFrom(enumReflected, "TextFileNotReadable");
    public static MySqlErrorCode FileExists = getFrom(enumReflected, "FileExists");
    public static MySqlErrorCode LoadInfo = getFrom(enumReflected, "LoadInfo");
    public static MySqlErrorCode AlterInfo = getFrom(enumReflected, "AlterInfo");
    public static MySqlErrorCode WrongSubKey = getFrom(enumReflected, "WrongSubKey");
    public static MySqlErrorCode CannotRemoveAllFields = getFrom(enumReflected, "CannotRemoveAllFields");
    public static MySqlErrorCode CannotDropFieldOrKey = getFrom(enumReflected, "CannotDropFieldOrKey");
    public static MySqlErrorCode InsertInfo = getFrom(enumReflected, "InsertInfo");
    public static MySqlErrorCode UpdateTableUsed = getFrom(enumReflected, "UpdateTableUsed");
    public static MySqlErrorCode NoSuchThread = getFrom(enumReflected, "NoSuchThread");
    public static MySqlErrorCode KillDenied = getFrom(enumReflected, "KillDenied");
    public static MySqlErrorCode NoTablesUsed = getFrom(enumReflected, "NoTablesUsed");
    public static MySqlErrorCode TooBigSet = getFrom(enumReflected, "TooBigSet");
    public static MySqlErrorCode NoUniqueLogFile = getFrom(enumReflected, "NoUniqueLogFile");
    public static MySqlErrorCode TableNotLockedForWrite = getFrom(enumReflected, "TableNotLockedForWrite");
    public static MySqlErrorCode TableNotLocked = getFrom(enumReflected, "TableNotLocked");
    public static MySqlErrorCode BlobCannotHaveDefault = getFrom(enumReflected, "BlobCannotHaveDefault");
    public static MySqlErrorCode WrongDatabaseName = getFrom(enumReflected, "WrongDatabaseName");
    public static MySqlErrorCode WrongTableName = getFrom(enumReflected, "WrongTableName");
    public static MySqlErrorCode TooBigSelect = getFrom(enumReflected, "TooBigSelect");
    public static MySqlErrorCode UnknownError = getFrom(enumReflected, "UnknownError");
    public static MySqlErrorCode UnknownProcedure = getFrom(enumReflected, "UnknownProcedure");
    public static MySqlErrorCode WrongParameterCountToProcedure = getFrom(enumReflected, "WrongParameterCountToProcedure");
    public static MySqlErrorCode WrongParametersToProcedure = getFrom(enumReflected, "WrongParametersToProcedure");
    public static MySqlErrorCode UnknownTable = getFrom(enumReflected, "UnknownTable");
    public static MySqlErrorCode FieldSpecifiedTwice = getFrom(enumReflected, "FieldSpecifiedTwice");
    public static MySqlErrorCode InvalidGroupFunctionUse = getFrom(enumReflected, "InvalidGroupFunctionUse");
    public static MySqlErrorCode UnsupportedExtenstion = getFrom(enumReflected, "UnsupportedExtenstion");
    public static MySqlErrorCode TableMustHaveColumns = getFrom(enumReflected, "TableMustHaveColumns");
    public static MySqlErrorCode RecordFileFull = getFrom(enumReflected, "RecordFileFull");
    public static MySqlErrorCode UnknownCharacterSet = getFrom(enumReflected, "UnknownCharacterSet");
    public static MySqlErrorCode TooManyTables = getFrom(enumReflected, "TooManyTables");
    public static MySqlErrorCode TooManyFields = getFrom(enumReflected, "TooManyFields");
    public static MySqlErrorCode TooBigRowSize = getFrom(enumReflected, "TooBigRowSize");
    public static MySqlErrorCode StackOverrun = getFrom(enumReflected, "StackOverrun");
    public static MySqlErrorCode WrongOuterJoin = getFrom(enumReflected, "WrongOuterJoin");
    public static MySqlErrorCode NullColumnInIndex = getFrom(enumReflected, "NullColumnInIndex");
    public static MySqlErrorCode CannotFindUDF = getFrom(enumReflected, "CannotFindUDF");
    public static MySqlErrorCode CannotInitializeUDF = getFrom(enumReflected, "CannotInitializeUDF");
    public static MySqlErrorCode UDFNoPaths = getFrom(enumReflected, "UDFNoPaths");
    public static MySqlErrorCode UDFExists = getFrom(enumReflected, "UDFExists");
    public static MySqlErrorCode CannotOpenLibrary = getFrom(enumReflected, "CannotOpenLibrary");
    public static MySqlErrorCode CannotFindDLEntry = getFrom(enumReflected, "CannotFindDLEntry");
    public static MySqlErrorCode FunctionNotDefined = getFrom(enumReflected, "FunctionNotDefined");
    public static MySqlErrorCode HostIsBlocked = getFrom(enumReflected, "HostIsBlocked");
    public static MySqlErrorCode HostNotPrivileged = getFrom(enumReflected, "HostNotPrivileged");
    public static MySqlErrorCode AnonymousUser = getFrom(enumReflected, "AnonymousUser");
    public static MySqlErrorCode PasswordNotAllowed = getFrom(enumReflected, "PasswordNotAllowed");
    public static MySqlErrorCode PasswordNoMatch = getFrom(enumReflected, "PasswordNoMatch");
    public static MySqlErrorCode UpdateInfo = getFrom(enumReflected, "UpdateInfo");
    public static MySqlErrorCode CannotCreateThread = getFrom(enumReflected, "CannotCreateThread");
    public static MySqlErrorCode WrongValueCountOnRow = getFrom(enumReflected, "WrongValueCountOnRow");
    public static MySqlErrorCode CannotReopenTable = getFrom(enumReflected, "CannotReopenTable");
    public static MySqlErrorCode InvalidUseOfNull = getFrom(enumReflected, "InvalidUseOfNull");
    public static MySqlErrorCode RegExpError = getFrom(enumReflected, "RegExpError");
    public static MySqlErrorCode MixOfGroupFunctionAndFields = getFrom(enumReflected, "MixOfGroupFunctionAndFields");
    public static MySqlErrorCode NonExistingGrant = getFrom(enumReflected, "NonExistingGrant");
    public static MySqlErrorCode TableAccessDenied = getFrom(enumReflected, "TableAccessDenied");
    public static MySqlErrorCode ColumnAccessDenied = getFrom(enumReflected, "ColumnAccessDenied");
    public static MySqlErrorCode IllegalGrantForTable = getFrom(enumReflected, "IllegalGrantForTable");
    public static MySqlErrorCode GrantWrongHostOrUser = getFrom(enumReflected, "GrantWrongHostOrUser");
    public static MySqlErrorCode NoSuchTable = getFrom(enumReflected, "NoSuchTable");
    public static MySqlErrorCode NonExistingTableGrant = getFrom(enumReflected, "NonExistingTableGrant");
    public static MySqlErrorCode NotAllowedCommand = getFrom(enumReflected, "NotAllowedCommand");
    public static MySqlErrorCode SyntaxError = getFrom(enumReflected, "SyntaxError");
    public static MySqlErrorCode DelayedCannotChangeLock = getFrom(enumReflected, "DelayedCannotChangeLock");
    public static MySqlErrorCode TooManyDelayedThreads = getFrom(enumReflected, "TooManyDelayedThreads");
    public static MySqlErrorCode AbortingConnection = getFrom(enumReflected, "AbortingConnection");
    public static MySqlErrorCode PacketTooLarge = getFrom(enumReflected, "PacketTooLarge");
    public static MySqlErrorCode NetReadErrorFromPipe = getFrom(enumReflected, "NetReadErrorFromPipe");
    public static MySqlErrorCode NetFCntlError = getFrom(enumReflected, "NetFCntlError");
    public static MySqlErrorCode NetPacketsOutOfOrder = getFrom(enumReflected, "NetPacketsOutOfOrder");
    public static MySqlErrorCode NetUncompressError = getFrom(enumReflected, "NetUncompressError");
    public static MySqlErrorCode NetReadError = getFrom(enumReflected, "NetReadError");
    public static MySqlErrorCode NetReadInterrupted = getFrom(enumReflected, "NetReadInterrupted");
    public static MySqlErrorCode NetErrorOnWrite = getFrom(enumReflected, "NetErrorOnWrite");
    public static MySqlErrorCode NetWriteInterrupted = getFrom(enumReflected, "NetWriteInterrupted");
    public static MySqlErrorCode TooLongString = getFrom(enumReflected, "TooLongString");
    public static MySqlErrorCode TableCannotHandleBlob = getFrom(enumReflected, "TableCannotHandleBlob");
    public static MySqlErrorCode TableCannotHandleAutoIncrement = getFrom(enumReflected, "TableCannotHandleAutoIncrement");
    public static MySqlErrorCode DelayedInsertTableLocked = getFrom(enumReflected, "DelayedInsertTableLocked");
    public static MySqlErrorCode WrongColumnName = getFrom(enumReflected, "WrongColumnName");
    public static MySqlErrorCode WrongKeyColumn = getFrom(enumReflected, "WrongKeyColumn");
    public static MySqlErrorCode WrongMergeTable = getFrom(enumReflected, "WrongMergeTable");
    public static MySqlErrorCode DuplicateUnique = getFrom(enumReflected, "DuplicateUnique");
    public static MySqlErrorCode BlobKeyWithoutLength = getFrom(enumReflected, "BlobKeyWithoutLength");
    public static MySqlErrorCode PrimaryCannotHaveNull = getFrom(enumReflected, "PrimaryCannotHaveNull");
    public static MySqlErrorCode TooManyRows = getFrom(enumReflected, "TooManyRows");
    public static MySqlErrorCode RequiresPrimaryKey = getFrom(enumReflected, "RequiresPrimaryKey");
    public static MySqlErrorCode NoRAIDCompiled = getFrom(enumReflected, "NoRAIDCompiled");
    public static MySqlErrorCode UpdateWithoutKeysInSafeMode = getFrom(enumReflected, "UpdateWithoutKeysInSafeMode");
    public static MySqlErrorCode KeyDoesNotExist = getFrom(enumReflected, "KeyDoesNotExist");
    public static MySqlErrorCode CheckNoSuchTable = getFrom(enumReflected, "CheckNoSuchTable");
    public static MySqlErrorCode CheckNotImplemented = getFrom(enumReflected, "CheckNotImplemented");
    public static MySqlErrorCode CannotDoThisDuringATransaction = getFrom(enumReflected, "CannotDoThisDuringATransaction");
    public static MySqlErrorCode ErrorDuringCommit = getFrom(enumReflected, "ErrorDuringCommit");
    public static MySqlErrorCode ErrorDuringRollback = getFrom(enumReflected, "ErrorDuringRollback");
    public static MySqlErrorCode ErrorDuringFlushLogs = getFrom(enumReflected, "ErrorDuringFlushLogs");
    public static MySqlErrorCode ErrorDuringCheckpoint = getFrom(enumReflected, "ErrorDuringCheckpoint");
    public static MySqlErrorCode NewAbortingConnection = getFrom(enumReflected, "NewAbortingConnection");
    public static MySqlErrorCode DumpNotImplemented = getFrom(enumReflected, "DumpNotImplemented");
    public static MySqlErrorCode FlushMasterBinLogClosed = getFrom(enumReflected, "FlushMasterBinLogClosed");
    public static MySqlErrorCode IndexRebuild = getFrom(enumReflected, "IndexRebuild");
    public static MySqlErrorCode MasterError = getFrom(enumReflected, "MasterError");
    public static MySqlErrorCode MasterNetRead = getFrom(enumReflected, "MasterNetRead");
    public static MySqlErrorCode MasterNetWrite = getFrom(enumReflected, "MasterNetWrite");
    public static MySqlErrorCode FullTextMatchingKeyNotFound = getFrom(enumReflected, "FullTextMatchingKeyNotFound");
    public static MySqlErrorCode LockOrActiveTransaction = getFrom(enumReflected, "LockOrActiveTransaction");
    public static MySqlErrorCode UnknownSystemVariable = getFrom(enumReflected, "UnknownSystemVariable");
    public static MySqlErrorCode CrashedOnUsage = getFrom(enumReflected, "CrashedOnUsage");
    public static MySqlErrorCode CrashedOnRepair = getFrom(enumReflected, "CrashedOnRepair");
    public static MySqlErrorCode WarningNotCompleteRollback = getFrom(enumReflected, "WarningNotCompleteRollback");
    public static MySqlErrorCode TransactionCacheFull = getFrom(enumReflected, "TransactionCacheFull");
    public static MySqlErrorCode SlaveMustStop = getFrom(enumReflected, "SlaveMustStop");
    public static MySqlErrorCode SlaveNotRunning = getFrom(enumReflected, "SlaveNotRunning");
    public static MySqlErrorCode BadSlave = getFrom(enumReflected, "BadSlave");
    public static MySqlErrorCode MasterInfo = getFrom(enumReflected, "MasterInfo");
    public static MySqlErrorCode SlaveThread = getFrom(enumReflected, "SlaveThread");
    public static MySqlErrorCode TooManyUserConnections = getFrom(enumReflected, "TooManyUserConnections");
    public static MySqlErrorCode SetConstantsOnly = getFrom(enumReflected, "SetConstantsOnly");
    public static MySqlErrorCode LockWaitTimeout = getFrom(enumReflected, "LockWaitTimeout");
    public static MySqlErrorCode LockTableFull = getFrom(enumReflected, "LockTableFull");
    public static MySqlErrorCode ReadOnlyTransaction = getFrom(enumReflected, "ReadOnlyTransaction");
    public static MySqlErrorCode DropDatabaseWithReadLock = getFrom(enumReflected, "DropDatabaseWithReadLock");
    public static MySqlErrorCode CreateDatabaseWithReadLock = getFrom(enumReflected, "CreateDatabaseWithReadLock");
    public static MySqlErrorCode WrongArguments = getFrom(enumReflected, "WrongArguments");
    public static MySqlErrorCode NoPermissionToCreateUser = getFrom(enumReflected, "NoPermissionToCreateUser");
    public static MySqlErrorCode UnionTablesInDifferentDirectory = getFrom(enumReflected, "UnionTablesInDifferentDirectory");
    public static MySqlErrorCode LockDeadlock = getFrom(enumReflected, "LockDeadlock");
    public static MySqlErrorCode TableCannotHandleFullText = getFrom(enumReflected, "TableCannotHandleFullText");
    public static MySqlErrorCode CannotAddForeignConstraint = getFrom(enumReflected, "CannotAddForeignConstraint");
    public static MySqlErrorCode NoReferencedRow = getFrom(enumReflected, "NoReferencedRow");
    public static MySqlErrorCode RowIsReferenced = getFrom(enumReflected, "RowIsReferenced");
    public static MySqlErrorCode ConnectToMaster = getFrom(enumReflected, "ConnectToMaster");
    public static MySqlErrorCode QueryOnMaster = getFrom(enumReflected, "QueryOnMaster");
    public static MySqlErrorCode ErrorWhenExecutingCommand = getFrom(enumReflected, "ErrorWhenExecutingCommand");
    public static MySqlErrorCode WrongUsage = getFrom(enumReflected, "WrongUsage");
    public static MySqlErrorCode WrongNumberOfColumnsInSelect = getFrom(enumReflected, "WrongNumberOfColumnsInSelect");
    public static MySqlErrorCode CannotUpdateWithReadLock = getFrom(enumReflected, "CannotUpdateWithReadLock");
    public static MySqlErrorCode MixingNotAllowed = getFrom(enumReflected, "MixingNotAllowed");
    public static MySqlErrorCode DuplicateArgument = getFrom(enumReflected, "DuplicateArgument");
    public static MySqlErrorCode UserLimitReached = getFrom(enumReflected, "UserLimitReached");
    public static MySqlErrorCode SpecifiedAccessDeniedError = getFrom(enumReflected, "SpecifiedAccessDeniedError");
    public static MySqlErrorCode LocalVariableError = getFrom(enumReflected, "LocalVariableError");
    public static MySqlErrorCode GlobalVariableError = getFrom(enumReflected, "GlobalVariableError");
    public static MySqlErrorCode NotDefaultError = getFrom(enumReflected, "NotDefaultError");
    public static MySqlErrorCode WrongValueForVariable = getFrom(enumReflected, "WrongValueForVariable");
    public static MySqlErrorCode WrongTypeForVariable = getFrom(enumReflected, "WrongTypeForVariable");
    public static MySqlErrorCode VariableCannotBeRead = getFrom(enumReflected, "VariableCannotBeRead");
    public static MySqlErrorCode CannotUseOptionHere = getFrom(enumReflected, "CannotUseOptionHere");
    public static MySqlErrorCode NotSupportedYet = getFrom(enumReflected, "NotSupportedYet");
    public static MySqlErrorCode MasterFatalErrorReadingBinLog = getFrom(enumReflected, "MasterFatalErrorReadingBinLog");
    public static MySqlErrorCode SlaveIgnoredTable = getFrom(enumReflected, "SlaveIgnoredTable");
    public static MySqlErrorCode IncorrectGlobalLocalVariable = getFrom(enumReflected, "IncorrectGlobalLocalVariable");
    public static MySqlErrorCode WrongForeignKeyDefinition = getFrom(enumReflected, "WrongForeignKeyDefinition");
    public static MySqlErrorCode KeyReferenceDoesNotMatchTableReference = getFrom(enumReflected, "KeyReferenceDoesNotMatchTableReference");
    public static MySqlErrorCode OpearnColumnsError = getFrom(enumReflected, "OpearnColumnsError");
    public static MySqlErrorCode SubQueryNoOneRow = getFrom(enumReflected, "SubQueryNoOneRow");
    public static MySqlErrorCode UnknownStatementHandler = getFrom(enumReflected, "UnknownStatementHandler");
    public static MySqlErrorCode CorruptHelpDatabase = getFrom(enumReflected, "CorruptHelpDatabase");
    public static MySqlErrorCode CyclicReference = getFrom(enumReflected, "CyclicReference");
    public static MySqlErrorCode AutoConvert = getFrom(enumReflected, "AutoConvert");
    public static MySqlErrorCode IllegalReference = getFrom(enumReflected, "IllegalReference");
    public static MySqlErrorCode DerivedMustHaveAlias = getFrom(enumReflected, "DerivedMustHaveAlias");
    public static MySqlErrorCode SelectReduced = getFrom(enumReflected, "SelectReduced");
    public static MySqlErrorCode TableNameNotAllowedHere = getFrom(enumReflected, "TableNameNotAllowedHere");
    public static MySqlErrorCode NotSupportedAuthMode = getFrom(enumReflected, "NotSupportedAuthMode");
    public static MySqlErrorCode SpatialCannotHaveNull = getFrom(enumReflected, "SpatialCannotHaveNull");
    public static MySqlErrorCode CollationCharsetMismatch = getFrom(enumReflected, "CollationCharsetMismatch");
    public static MySqlErrorCode SlaveWasRunning = getFrom(enumReflected, "SlaveWasRunning");
    public static MySqlErrorCode SlaveWasNotRunning = getFrom(enumReflected, "SlaveWasNotRunning");
    public static MySqlErrorCode TooBigForUncompress = getFrom(enumReflected, "TooBigForUncompress");
    public static MySqlErrorCode ZipLibMemoryError = getFrom(enumReflected, "ZipLibMemoryError");
    public static MySqlErrorCode ZipLibBufferError = getFrom(enumReflected, "ZipLibBufferError");
    public static MySqlErrorCode ZipLibDataError = getFrom(enumReflected, "ZipLibDataError");
    public static MySqlErrorCode CutValueGroupConcat = getFrom(enumReflected, "CutValueGroupConcat");
    public static MySqlErrorCode WarningTooFewRecords = getFrom(enumReflected, "WarningTooFewRecords");
    public static MySqlErrorCode WarningTooManyRecords = getFrom(enumReflected, "WarningTooManyRecords");
    public static MySqlErrorCode WarningNullToNotNull = getFrom(enumReflected, "WarningNullToNotNull");
    public static MySqlErrorCode WarningDataOutOfRange = getFrom(enumReflected, "WarningDataOutOfRange");
    public static MySqlErrorCode WaningDataTruncated = getFrom(enumReflected, "WaningDataTruncated");
    public static MySqlErrorCode WaningUsingOtherHandler = getFrom(enumReflected, "WaningUsingOtherHandler");
    public static MySqlErrorCode CannotAggregateTwoCollations = getFrom(enumReflected, "CannotAggregateTwoCollations");
    public static MySqlErrorCode DropUserError = getFrom(enumReflected, "DropUserError");
    public static MySqlErrorCode RevokeGrantsError = getFrom(enumReflected, "RevokeGrantsError");
    public static MySqlErrorCode CannotAggregateThreeCollations = getFrom(enumReflected, "CannotAggregateThreeCollations");
    public static MySqlErrorCode CannotAggregateNCollations = getFrom(enumReflected, "CannotAggregateNCollations");
    public static MySqlErrorCode VariableIsNotStructure = getFrom(enumReflected, "VariableIsNotStructure");
    public static MySqlErrorCode UnknownCollation = getFrom(enumReflected, "UnknownCollation");
    public static MySqlErrorCode SlaveIgnoreSSLParameters = getFrom(enumReflected, "SlaveIgnoreSSLParameters");
    public static MySqlErrorCode ServerIsInSecureAuthMode = getFrom(enumReflected, "ServerIsInSecureAuthMode");
    public static MySqlErrorCode WaningFieldResolved = getFrom(enumReflected, "WaningFieldResolved");
    public static MySqlErrorCode BadSlaveUntilCondition = getFrom(enumReflected, "BadSlaveUntilCondition");
    public static MySqlErrorCode MissingSkipSlave = getFrom(enumReflected, "MissingSkipSlave");
    public static MySqlErrorCode ErrorUntilConditionIgnored = getFrom(enumReflected, "ErrorUntilConditionIgnored");
    public static MySqlErrorCode WrongNameForIndex = getFrom(enumReflected, "WrongNameForIndex");
    public static MySqlErrorCode WrongNameForCatalog = getFrom(enumReflected, "WrongNameForCatalog");
    public static MySqlErrorCode WarningQueryCacheResize = getFrom(enumReflected, "WarningQueryCacheResize");
    public static MySqlErrorCode BadFullTextColumn = getFrom(enumReflected, "BadFullTextColumn");
    public static MySqlErrorCode UnknownKeyCache = getFrom(enumReflected, "UnknownKeyCache");
    public static MySqlErrorCode WarningHostnameWillNotWork = getFrom(enumReflected, "WarningHostnameWillNotWork");
    public static MySqlErrorCode UnknownStorageEngine = getFrom(enumReflected, "UnknownStorageEngine");
    public static MySqlErrorCode WaningDeprecatedSyntax = getFrom(enumReflected, "WaningDeprecatedSyntax");
    public static MySqlErrorCode NonUpdateableTable = getFrom(enumReflected, "NonUpdateableTable");
    public static MySqlErrorCode FeatureDisabled = getFrom(enumReflected, "FeatureDisabled");
    public static MySqlErrorCode OptionPreventsStatement = getFrom(enumReflected, "OptionPreventsStatement");
    public static MySqlErrorCode DuplicatedValueInType = getFrom(enumReflected, "DuplicatedValueInType");
    public static MySqlErrorCode TruncatedWrongValue = getFrom(enumReflected, "TruncatedWrongValue");
    public static MySqlErrorCode TooMuchAutoTimestampColumns = getFrom(enumReflected, "TooMuchAutoTimestampColumns");
    public static MySqlErrorCode InvalidOnUpdate = getFrom(enumReflected, "InvalidOnUpdate");
    public static MySqlErrorCode UnsupportedPreparedStatement = getFrom(enumReflected, "UnsupportedPreparedStatement");
    public static MySqlErrorCode GetErroMessage = getFrom(enumReflected, "GetErroMessage");
    public static MySqlErrorCode GetTemporaryErrorMessage = getFrom(enumReflected, "GetTemporaryErrorMessage");
    public static MySqlErrorCode UnknownTimeZone = getFrom(enumReflected, "UnknownTimeZone");
    public static MySqlErrorCode WarningInvalidTimestamp = getFrom(enumReflected, "WarningInvalidTimestamp");
    public static MySqlErrorCode InvalidCharacterString = getFrom(enumReflected, "InvalidCharacterString");
    public static MySqlErrorCode WarningAllowedPacketOverflowed = getFrom(enumReflected, "WarningAllowedPacketOverflowed");
    public static MySqlErrorCode ConflictingDeclarations = getFrom(enumReflected, "ConflictingDeclarations");
    public static MySqlErrorCode StoredProcedureNoRecursiveCreate = getFrom(enumReflected, "StoredProcedureNoRecursiveCreate");
    public static MySqlErrorCode StoredProcedureAlreadyExists = getFrom(enumReflected, "StoredProcedureAlreadyExists");
    public static MySqlErrorCode StoredProcedureDoesNotExist = getFrom(enumReflected, "StoredProcedureDoesNotExist");
    public static MySqlErrorCode StoredProcedureDropFailed = getFrom(enumReflected, "StoredProcedureDropFailed");
    public static MySqlErrorCode StoredProcedureStoreFailed = getFrom(enumReflected, "StoredProcedureStoreFailed");
    public static MySqlErrorCode StoredProcedureLiLabelMismatch = getFrom(enumReflected, "StoredProcedureLiLabelMismatch");
    public static MySqlErrorCode StoredProcedureLabelRedefine = getFrom(enumReflected, "StoredProcedureLabelRedefine");
    public static MySqlErrorCode StoredProcedureLabelMismatch = getFrom(enumReflected, "StoredProcedureLabelMismatch");
    public static MySqlErrorCode StoredProcedureUninitializedVariable = getFrom(enumReflected, "StoredProcedureUninitializedVariable");
    public static MySqlErrorCode StoredProcedureBadSelect = getFrom(enumReflected, "StoredProcedureBadSelect");
    public static MySqlErrorCode StoredProcedureBadReturn = getFrom(enumReflected, "StoredProcedureBadReturn");
    public static MySqlErrorCode StoredProcedureBadStatement = getFrom(enumReflected, "StoredProcedureBadStatement");
    public static MySqlErrorCode UpdateLogDeprecatedIgnored = getFrom(enumReflected, "UpdateLogDeprecatedIgnored");
    public static MySqlErrorCode UpdateLogDeprecatedTranslated = getFrom(enumReflected, "UpdateLogDeprecatedTranslated");
    public static MySqlErrorCode QueryInterrupted = getFrom(enumReflected, "QueryInterrupted");
    public static MySqlErrorCode StoredProcedureNumberOfArguments = getFrom(enumReflected, "StoredProcedureNumberOfArguments");
    public static MySqlErrorCode StoredProcedureConditionMismatch = getFrom(enumReflected, "StoredProcedureConditionMismatch");
    public static MySqlErrorCode StoredProcedureNoReturn = getFrom(enumReflected, "StoredProcedureNoReturn");
    public static MySqlErrorCode StoredProcedureNoReturnEnd = getFrom(enumReflected, "StoredProcedureNoReturnEnd");
    public static MySqlErrorCode StoredProcedureBadCursorQuery = getFrom(enumReflected, "StoredProcedureBadCursorQuery");
    public static MySqlErrorCode StoredProcedureBadCursorSelect = getFrom(enumReflected, "StoredProcedureBadCursorSelect");
    public static MySqlErrorCode StoredProcedureCursorMismatch = getFrom(enumReflected, "StoredProcedureCursorMismatch");
    public static MySqlErrorCode StoredProcedureAlreadyOpen = getFrom(enumReflected, "StoredProcedureAlreadyOpen");
    public static MySqlErrorCode StoredProcedureCursorNotOpen = getFrom(enumReflected, "StoredProcedureCursorNotOpen");
    public static MySqlErrorCode StoredProcedureUndeclaredVariabel = getFrom(enumReflected, "StoredProcedureUndeclaredVariabel");
    public static MySqlErrorCode StoredProcedureWrongNumberOfFetchArguments = getFrom(enumReflected, "StoredProcedureWrongNumberOfFetchArguments");
    public static MySqlErrorCode StoredProcedureFetchNoData = getFrom(enumReflected, "StoredProcedureFetchNoData");
    public static MySqlErrorCode StoredProcedureDuplicateParameter = getFrom(enumReflected, "StoredProcedureDuplicateParameter");
    public static MySqlErrorCode StoredProcedureDuplicateVariable = getFrom(enumReflected, "StoredProcedureDuplicateVariable");
    public static MySqlErrorCode StoredProcedureDuplicateCondition = getFrom(enumReflected, "StoredProcedureDuplicateCondition");
    public static MySqlErrorCode StoredProcedureDuplicateCursor = getFrom(enumReflected, "StoredProcedureDuplicateCursor");
    public static MySqlErrorCode StoredProcedureCannotAlter = getFrom(enumReflected, "StoredProcedureCannotAlter");
    public static MySqlErrorCode StoredProcedureSubSelectNYI = getFrom(enumReflected, "StoredProcedureSubSelectNYI");
    public static MySqlErrorCode StatementNotAllowedInStoredFunctionOrTrigger = getFrom(enumReflected, "StatementNotAllowedInStoredFunctionOrTrigger");
    public static MySqlErrorCode StoredProcedureVariableConditionAfterCursorHandler = getFrom(enumReflected, "StoredProcedureVariableConditionAfterCursorHandler");
    public static MySqlErrorCode StoredProcedureCursorAfterHandler = getFrom(enumReflected, "StoredProcedureCursorAfterHandler");
    public static MySqlErrorCode StoredProcedureCaseNotFound = getFrom(enumReflected, "StoredProcedureCaseNotFound");
    public static MySqlErrorCode FileParserTooBigFile = getFrom(enumReflected, "FileParserTooBigFile");
    public static MySqlErrorCode FileParserBadHeader = getFrom(enumReflected, "FileParserBadHeader");
    public static MySqlErrorCode FileParserEOFInComment = getFrom(enumReflected, "FileParserEOFInComment");
    public static MySqlErrorCode FileParserErrorInParameter = getFrom(enumReflected, "FileParserErrorInParameter");
    public static MySqlErrorCode FileParserEOFInUnknownParameter = getFrom(enumReflected, "FileParserEOFInUnknownParameter");
    public static MySqlErrorCode ViewNoExplain = getFrom(enumReflected, "ViewNoExplain");
    public static MySqlErrorCode FrmUnknownType = getFrom(enumReflected, "FrmUnknownType");
    public static MySqlErrorCode WrongObject = getFrom(enumReflected, "WrongObject");
    public static MySqlErrorCode NonUpdateableColumn = getFrom(enumReflected, "NonUpdateableColumn");
    public static MySqlErrorCode ViewSelectDerived = getFrom(enumReflected, "ViewSelectDerived");
    public static MySqlErrorCode ViewSelectClause = getFrom(enumReflected, "ViewSelectClause");
    public static MySqlErrorCode ViewSelectVariable = getFrom(enumReflected, "ViewSelectVariable");
    public static MySqlErrorCode ViewSelectTempTable = getFrom(enumReflected, "ViewSelectTempTable");
    public static MySqlErrorCode ViewWrongList = getFrom(enumReflected, "ViewWrongList");
    public static MySqlErrorCode WarningViewMerge = getFrom(enumReflected, "WarningViewMerge");
    public static MySqlErrorCode WarningViewWithoutKey = getFrom(enumReflected, "WarningViewWithoutKey");
    public static MySqlErrorCode ViewInvalid = getFrom(enumReflected, "ViewInvalid");
    public static MySqlErrorCode StoredProcedureNoDropStoredProcedure = getFrom(enumReflected, "StoredProcedureNoDropStoredProcedure");
    public static MySqlErrorCode StoredProcedureGotoInHandler = getFrom(enumReflected, "StoredProcedureGotoInHandler");
    public static MySqlErrorCode TriggerAlreadyExists = getFrom(enumReflected, "TriggerAlreadyExists");
    public static MySqlErrorCode TriggerDoesNotExist = getFrom(enumReflected, "TriggerDoesNotExist");
    public static MySqlErrorCode TriggerOnViewOrTempTable = getFrom(enumReflected, "TriggerOnViewOrTempTable");
    public static MySqlErrorCode TriggerCannotChangeRow = getFrom(enumReflected, "TriggerCannotChangeRow");
    public static MySqlErrorCode TriggerNoSuchRowInTrigger = getFrom(enumReflected, "TriggerNoSuchRowInTrigger");
    public static MySqlErrorCode NoDefaultForField = getFrom(enumReflected, "NoDefaultForField");
    public static MySqlErrorCode DivisionByZero = getFrom(enumReflected, "DivisionByZero");
    public static MySqlErrorCode TruncatedWrongValueForField = getFrom(enumReflected, "TruncatedWrongValueForField");
    public static MySqlErrorCode IllegalValueForType = getFrom(enumReflected, "IllegalValueForType");
    public static MySqlErrorCode ViewNonUpdatableCheck = getFrom(enumReflected, "ViewNonUpdatableCheck");
    public static MySqlErrorCode ViewCheckFailed = getFrom(enumReflected, "ViewCheckFailed");
    public static MySqlErrorCode PrecedureAccessDenied = getFrom(enumReflected, "PrecedureAccessDenied");
    public static MySqlErrorCode RelayLogFail = getFrom(enumReflected, "RelayLogFail");
    public static MySqlErrorCode PasswordLength = getFrom(enumReflected, "PasswordLength");
    public static MySqlErrorCode UnknownTargetBinLog = getFrom(enumReflected, "UnknownTargetBinLog");
    public static MySqlErrorCode IOErrorLogIndexRead = getFrom(enumReflected, "IOErrorLogIndexRead");
    public static MySqlErrorCode BinLogPurgeProhibited = getFrom(enumReflected, "BinLogPurgeProhibited");
    public static MySqlErrorCode FSeekFail = getFrom(enumReflected, "FSeekFail");
    public static MySqlErrorCode BinLogPurgeFatalError = getFrom(enumReflected, "BinLogPurgeFatalError");
    public static MySqlErrorCode LogInUse = getFrom(enumReflected, "LogInUse");
    public static MySqlErrorCode LogPurgeUnknownError = getFrom(enumReflected, "LogPurgeUnknownError");
    public static MySqlErrorCode RelayLogInit = getFrom(enumReflected, "RelayLogInit");
    public static MySqlErrorCode NoBinaryLogging = getFrom(enumReflected, "NoBinaryLogging");
    public static MySqlErrorCode ReservedSyntax = getFrom(enumReflected, "ReservedSyntax");
    public static MySqlErrorCode WSAStartupFailed = getFrom(enumReflected, "WSAStartupFailed");
    public static MySqlErrorCode DifferentGroupsProcedure = getFrom(enumReflected, "DifferentGroupsProcedure");
    public static MySqlErrorCode NoGroupForProcedure = getFrom(enumReflected, "NoGroupForProcedure");
    public static MySqlErrorCode OrderWithProcedure = getFrom(enumReflected, "OrderWithProcedure");
    public static MySqlErrorCode LoggingProhibitsChangingOf = getFrom(enumReflected, "LoggingProhibitsChangingOf");
    public static MySqlErrorCode NoFileMapping = getFrom(enumReflected, "NoFileMapping");
    public static MySqlErrorCode WrongMagic = getFrom(enumReflected, "WrongMagic");
    public static MySqlErrorCode PreparedStatementManyParameters = getFrom(enumReflected, "PreparedStatementManyParameters");
    public static MySqlErrorCode KeyPartZero = getFrom(enumReflected, "KeyPartZero");
    public static MySqlErrorCode ViewChecksum = getFrom(enumReflected, "ViewChecksum");
    public static MySqlErrorCode ViewMultiUpdate = getFrom(enumReflected, "ViewMultiUpdate");
    public static MySqlErrorCode ViewNoInsertFieldList = getFrom(enumReflected, "ViewNoInsertFieldList");
    public static MySqlErrorCode ViewDeleteMergeView = getFrom(enumReflected, "ViewDeleteMergeView");
    public static MySqlErrorCode CannotUser = getFrom(enumReflected, "CannotUser");
    public static MySqlErrorCode XAERNotA = getFrom(enumReflected, "XAERNotA");
    public static MySqlErrorCode XAERInvalid = getFrom(enumReflected, "XAERInvalid");
    public static MySqlErrorCode XAERRemoveFail = getFrom(enumReflected, "XAERRemoveFail");
    public static MySqlErrorCode XAEROutside = getFrom(enumReflected, "XAEROutside");
    public static MySqlErrorCode XAERRemoveError = getFrom(enumReflected, "XAERRemoveError");
    public static MySqlErrorCode XARBRollback = getFrom(enumReflected, "XARBRollback");
    public static MySqlErrorCode NonExistingProcedureGrant = getFrom(enumReflected, "NonExistingProcedureGrant");
    public static MySqlErrorCode ProcedureAutoGrantFail = getFrom(enumReflected, "ProcedureAutoGrantFail");
    public static MySqlErrorCode ProcedureAutoRevokeFail = getFrom(enumReflected, "ProcedureAutoRevokeFail");
    public static MySqlErrorCode DataTooLong = getFrom(enumReflected, "DataTooLong");
    public static MySqlErrorCode StoredProcedureSQLState = getFrom(enumReflected, "StoredProcedureSQLState");
    public static MySqlErrorCode StartupError = getFrom(enumReflected, "StartupError");
    public static MySqlErrorCode LoadFromFixedSizeRowsToVariable = getFrom(enumReflected, "LoadFromFixedSizeRowsToVariable");
    public static MySqlErrorCode CannotCreateUserWithGrant = getFrom(enumReflected, "CannotCreateUserWithGrant");
    public static MySqlErrorCode WrongValueForType = getFrom(enumReflected, "WrongValueForType");
    public static MySqlErrorCode TableDefinitionChanged = getFrom(enumReflected, "TableDefinitionChanged");
    public static MySqlErrorCode StoredProcedureDuplicateHandler = getFrom(enumReflected, "StoredProcedureDuplicateHandler");
    public static MySqlErrorCode StoredProcedureNotVariableArgument = getFrom(enumReflected, "StoredProcedureNotVariableArgument");
    public static MySqlErrorCode StoredProcedureNoReturnSet = getFrom(enumReflected, "StoredProcedureNoReturnSet");
    public static MySqlErrorCode CannotCreateGeometryObject = getFrom(enumReflected, "CannotCreateGeometryObject");
    public static MySqlErrorCode FailedRoutineBreaksBinLog = getFrom(enumReflected, "FailedRoutineBreaksBinLog");
    public static MySqlErrorCode BinLogUnsafeRoutine = getFrom(enumReflected, "BinLogUnsafeRoutine");
    public static MySqlErrorCode BinLogCreateRoutineNeedSuper = getFrom(enumReflected, "BinLogCreateRoutineNeedSuper");
    public static MySqlErrorCode ExecuteStatementWithOpenCursor = getFrom(enumReflected, "ExecuteStatementWithOpenCursor");
    public static MySqlErrorCode StatementHasNoOpenCursor = getFrom(enumReflected, "StatementHasNoOpenCursor");
    public static MySqlErrorCode CommitNotAllowedIfStoredFunctionOrTrigger = getFrom(enumReflected, "CommitNotAllowedIfStoredFunctionOrTrigger");
    public static MySqlErrorCode NoDefaultForViewField = getFrom(enumReflected, "NoDefaultForViewField");
    public static MySqlErrorCode StoredProcedureNoRecursion = getFrom(enumReflected, "StoredProcedureNoRecursion");
    public static MySqlErrorCode TooBigScale = getFrom(enumReflected, "TooBigScale");
    public static MySqlErrorCode TooBigPrecision = getFrom(enumReflected, "TooBigPrecision");
    public static MySqlErrorCode MBiggerThanD = getFrom(enumReflected, "MBiggerThanD");
    public static MySqlErrorCode WrongLockOfSystemTable = getFrom(enumReflected, "WrongLockOfSystemTable");
    public static MySqlErrorCode ConnectToForeignDataSource = getFrom(enumReflected, "ConnectToForeignDataSource");
    public static MySqlErrorCode QueryOnForeignDataSource = getFrom(enumReflected, "QueryOnForeignDataSource");
    public static MySqlErrorCode ForeignDataSourceDoesNotExist = getFrom(enumReflected, "ForeignDataSourceDoesNotExist");
    public static MySqlErrorCode ForeignDataStringInvalidCannotCreate = getFrom(enumReflected, "ForeignDataStringInvalidCannotCreate");
    public static MySqlErrorCode ForeignDataStringInvalid = getFrom(enumReflected, "ForeignDataStringInvalid");
    public static MySqlErrorCode CannotCreateFederatedTable = getFrom(enumReflected, "CannotCreateFederatedTable");
    public static MySqlErrorCode TriggerInWrongSchema = getFrom(enumReflected, "TriggerInWrongSchema");
    public static MySqlErrorCode StackOverrunNeedMore = getFrom(enumReflected, "StackOverrunNeedMore");
    public static MySqlErrorCode TooLongBody = getFrom(enumReflected, "TooLongBody");
    public static MySqlErrorCode WarningCannotDropDefaultKeyCache = getFrom(enumReflected, "WarningCannotDropDefaultKeyCache");
    public static MySqlErrorCode TooBigDisplayWidth = getFrom(enumReflected, "TooBigDisplayWidth");
    public static MySqlErrorCode XAERDuplicateID = getFrom(enumReflected, "XAERDuplicateID");
    public static MySqlErrorCode DateTimeFunctionOverflow = getFrom(enumReflected, "DateTimeFunctionOverflow");
    public static MySqlErrorCode CannotUpdateUsedTableInStoredFunctionOrTrigger = getFrom(enumReflected, "CannotUpdateUsedTableInStoredFunctionOrTrigger");
    public static MySqlErrorCode ViewPreventUpdate = getFrom(enumReflected, "ViewPreventUpdate");
    public static MySqlErrorCode PreparedStatementNoRecursion = getFrom(enumReflected, "PreparedStatementNoRecursion");
    public static MySqlErrorCode StoredProcedureCannotSetAutoCommit = getFrom(enumReflected, "StoredProcedureCannotSetAutoCommit");
    public static MySqlErrorCode MalformedDefiner = getFrom(enumReflected, "MalformedDefiner");
    public static MySqlErrorCode ViewFrmNoUser = getFrom(enumReflected, "ViewFrmNoUser");
    public static MySqlErrorCode ViewOtherUser = getFrom(enumReflected, "ViewOtherUser");
    public static MySqlErrorCode NoSuchUser = getFrom(enumReflected, "NoSuchUser");
    public static MySqlErrorCode ForbidSchemaChange = getFrom(enumReflected, "ForbidSchemaChange");
    public static MySqlErrorCode RowIsReferenced2 = getFrom(enumReflected, "RowIsReferenced2");
    public static MySqlErrorCode NoReferencedRow2 = getFrom(enumReflected, "NoReferencedRow2");
    public static MySqlErrorCode StoredProcedureBadVariableShadow = getFrom(enumReflected, "StoredProcedureBadVariableShadow");
    public static MySqlErrorCode TriggerNoDefiner = getFrom(enumReflected, "TriggerNoDefiner");
    public static MySqlErrorCode OldFileFormat = getFrom(enumReflected, "OldFileFormat");
    public static MySqlErrorCode StoredProcedureRecursionLimit = getFrom(enumReflected, "StoredProcedureRecursionLimit");
    public static MySqlErrorCode StoredProcedureTableCorrupt = getFrom(enumReflected, "StoredProcedureTableCorrupt");
    public static MySqlErrorCode StoredProcedureWrongName = getFrom(enumReflected, "StoredProcedureWrongName");
    public static MySqlErrorCode TableNeedsUpgrade = getFrom(enumReflected, "TableNeedsUpgrade");
    public static MySqlErrorCode StoredProcedureNoAggregate = getFrom(enumReflected, "StoredProcedureNoAggregate");
    public static MySqlErrorCode MaxPreparedStatementCountReached = getFrom(enumReflected, "MaxPreparedStatementCountReached");
    public static MySqlErrorCode ViewRecursive = getFrom(enumReflected, "ViewRecursive");
    public static MySqlErrorCode NonGroupingFieldUsed = getFrom(enumReflected, "NonGroupingFieldUsed");
    public static MySqlErrorCode TableCannotHandleSpatialKeys = getFrom(enumReflected, "TableCannotHandleSpatialKeys");
    public static MySqlErrorCode NoTriggersOnSystemSchema = getFrom(enumReflected, "NoTriggersOnSystemSchema");
    public static MySqlErrorCode RemovedSpaces = getFrom(enumReflected, "RemovedSpaces");
    public static MySqlErrorCode AutoIncrementReadFailed = getFrom(enumReflected, "AutoIncrementReadFailed");
    public static MySqlErrorCode UserNameError = getFrom(enumReflected, "UserNameError");
    public static MySqlErrorCode HostNameError = getFrom(enumReflected, "HostNameError");
    public static MySqlErrorCode WrongStringLength = getFrom(enumReflected, "WrongStringLength");
    public static MySqlErrorCode NonInsertableTable = getFrom(enumReflected, "NonInsertableTable");
    public static MySqlErrorCode AdminWrongMergeTable = getFrom(enumReflected, "AdminWrongMergeTable");
    public static MySqlErrorCode TooHighLevelOfNestingForSelect = getFrom(enumReflected, "TooHighLevelOfNestingForSelect");
    public static MySqlErrorCode NameBecomesEmpty = getFrom(enumReflected, "NameBecomesEmpty");
    public static MySqlErrorCode AmbiguousFieldTerm = getFrom(enumReflected, "AmbiguousFieldTerm");
    public static MySqlErrorCode ForeignServerExists = getFrom(enumReflected, "ForeignServerExists");
    public static MySqlErrorCode ForeignServerDoesNotExist = getFrom(enumReflected, "ForeignServerDoesNotExist");
    public static MySqlErrorCode IllegalHACreateOption = getFrom(enumReflected, "IllegalHACreateOption");
    public static MySqlErrorCode PartitionRequiresValues = getFrom(enumReflected, "PartitionRequiresValues");
    public static MySqlErrorCode PartitionWrongValues = getFrom(enumReflected, "PartitionWrongValues");
    public static MySqlErrorCode PartitionMaxValue = getFrom(enumReflected, "PartitionMaxValue");
    public static MySqlErrorCode PartitionSubPartition = getFrom(enumReflected, "PartitionSubPartition");
    public static MySqlErrorCode PartitionSubPartMix = getFrom(enumReflected, "PartitionSubPartMix");
    public static MySqlErrorCode PartitionWrongNoPart = getFrom(enumReflected, "PartitionWrongNoPart");
    public static MySqlErrorCode PartitionWrongNoSubPart = getFrom(enumReflected, "PartitionWrongNoSubPart");
    public static MySqlErrorCode WrongExpressionInParitionFunction = getFrom(enumReflected, "WrongExpressionInParitionFunction");
    public static MySqlErrorCode NoConstantExpressionInRangeOrListError = getFrom(enumReflected, "NoConstantExpressionInRangeOrListError");
    public static MySqlErrorCode FieldNotFoundPartitionErrror = getFrom(enumReflected, "FieldNotFoundPartitionErrror");
    public static MySqlErrorCode ListOfFieldsOnlyInHash = getFrom(enumReflected, "ListOfFieldsOnlyInHash");
    public static MySqlErrorCode InconsistentPartitionInfo = getFrom(enumReflected, "InconsistentPartitionInfo");
    public static MySqlErrorCode PartitionFunctionNotAllowed = getFrom(enumReflected, "PartitionFunctionNotAllowed");
    public static MySqlErrorCode PartitionsMustBeDefined = getFrom(enumReflected, "PartitionsMustBeDefined");
    public static MySqlErrorCode RangeNotIncreasing = getFrom(enumReflected, "RangeNotIncreasing");
    public static MySqlErrorCode InconsistentTypeOfFunctions = getFrom(enumReflected, "InconsistentTypeOfFunctions");
    public static MySqlErrorCode MultipleDefinitionsConstantInListPartition = getFrom(enumReflected, "MultipleDefinitionsConstantInListPartition");
    public static MySqlErrorCode PartitionEntryError = getFrom(enumReflected, "PartitionEntryError");
    public static MySqlErrorCode MixHandlerError = getFrom(enumReflected, "MixHandlerError");
    public static MySqlErrorCode PartitionNotDefined = getFrom(enumReflected, "PartitionNotDefined");
    public static MySqlErrorCode TooManyPartitions = getFrom(enumReflected, "TooManyPartitions");
    public static MySqlErrorCode SubPartitionError = getFrom(enumReflected, "SubPartitionError");
    public static MySqlErrorCode CannotCreateHandlerFile = getFrom(enumReflected, "CannotCreateHandlerFile");
    public static MySqlErrorCode BlobFieldInPartitionFunction = getFrom(enumReflected, "BlobFieldInPartitionFunction");
    public static MySqlErrorCode UniqueKeyNeedAllFieldsInPartitioningFunction = getFrom(enumReflected, "UniqueKeyNeedAllFieldsInPartitioningFunction");
    public static MySqlErrorCode NoPartitions = getFrom(enumReflected, "NoPartitions");
    public static MySqlErrorCode PartitionManagementOnNoPartitioned = getFrom(enumReflected, "PartitionManagementOnNoPartitioned");
    public static MySqlErrorCode ForeignKeyOnPartitioned = getFrom(enumReflected, "ForeignKeyOnPartitioned");
    public static MySqlErrorCode DropPartitionNonExistent = getFrom(enumReflected, "DropPartitionNonExistent");
    public static MySqlErrorCode DropLastPartition = getFrom(enumReflected, "DropLastPartition");
    public static MySqlErrorCode CoalesceOnlyOnHashPartition = getFrom(enumReflected, "CoalesceOnlyOnHashPartition");
    public static MySqlErrorCode ReorganizeHashOnlyOnSameNumber = getFrom(enumReflected, "ReorganizeHashOnlyOnSameNumber");
    public static MySqlErrorCode ReorganizeNoParameter = getFrom(enumReflected, "ReorganizeNoParameter");
    public static MySqlErrorCode OnlyOnRangeListPartition = getFrom(enumReflected, "OnlyOnRangeListPartition");
    public static MySqlErrorCode AddPartitionSubPartition = getFrom(enumReflected, "AddPartitionSubPartition");
    public static MySqlErrorCode AddPartitionNoNewPartition = getFrom(enumReflected, "AddPartitionNoNewPartition");
    public static MySqlErrorCode CoalescePartitionNoPartition = getFrom(enumReflected, "CoalescePartitionNoPartition");
    public static MySqlErrorCode ReorganizePartitionNotExist = getFrom(enumReflected, "ReorganizePartitionNotExist");
    public static MySqlErrorCode SameNamePartition = getFrom(enumReflected, "SameNamePartition");
    public static MySqlErrorCode NoBinLog = getFrom(enumReflected, "NoBinLog");
    public static MySqlErrorCode ConsecutiveReorganizePartitions = getFrom(enumReflected, "ConsecutiveReorganizePartitions");
    public static MySqlErrorCode ReorganizeOutsideRange = getFrom(enumReflected, "ReorganizeOutsideRange");
    public static MySqlErrorCode PartitionFunctionFailure = getFrom(enumReflected, "PartitionFunctionFailure");
    public static MySqlErrorCode PartitionStateError = getFrom(enumReflected, "PartitionStateError");
    public static MySqlErrorCode LimitedPartitionRange = getFrom(enumReflected, "LimitedPartitionRange");
    public static MySqlErrorCode PluginIsNotLoaded = getFrom(enumReflected, "PluginIsNotLoaded");
    public static MySqlErrorCode WrongValue = getFrom(enumReflected, "WrongValue");
    public static MySqlErrorCode NoPartitionForGivenValue = getFrom(enumReflected, "NoPartitionForGivenValue");
    public static MySqlErrorCode FileGroupOptionOnlyOnce = getFrom(enumReflected, "FileGroupOptionOnlyOnce");
    public static MySqlErrorCode CreateFileGroupFailed = getFrom(enumReflected, "CreateFileGroupFailed");
    public static MySqlErrorCode DropFileGroupFailed = getFrom(enumReflected, "DropFileGroupFailed");
    public static MySqlErrorCode TableSpaceAutoExtend = getFrom(enumReflected, "TableSpaceAutoExtend");
    public static MySqlErrorCode WrongSizeNumber = getFrom(enumReflected, "WrongSizeNumber");
    public static MySqlErrorCode SizeOverflow = getFrom(enumReflected, "SizeOverflow");
    public static MySqlErrorCode AlterFileGroupFailed = getFrom(enumReflected, "AlterFileGroupFailed");
    public static MySqlErrorCode BinLogRowLogginFailed = getFrom(enumReflected, "BinLogRowLogginFailed");
    public static MySqlErrorCode BinLogRowWrongTableDefinition = getFrom(enumReflected, "BinLogRowWrongTableDefinition");
    public static MySqlErrorCode BinLogRowRBRToSBR = getFrom(enumReflected, "BinLogRowRBRToSBR");
    public static MySqlErrorCode EventAlreadyExists = getFrom(enumReflected, "EventAlreadyExists");
    public static MySqlErrorCode EventStoreFailed = getFrom(enumReflected, "EventStoreFailed");
    public static MySqlErrorCode EventDoesNotExist = getFrom(enumReflected, "EventDoesNotExist");
    public static MySqlErrorCode EventCannotAlter = getFrom(enumReflected, "EventCannotAlter");
    public static MySqlErrorCode EventDropFailed = getFrom(enumReflected, "EventDropFailed");
    public static MySqlErrorCode EventIntervalNotPositiveOrTooBig = getFrom(enumReflected, "EventIntervalNotPositiveOrTooBig");
    public static MySqlErrorCode EventEndsBeforeStarts = getFrom(enumReflected, "EventEndsBeforeStarts");
    public static MySqlErrorCode EventExecTimeInThePast = getFrom(enumReflected, "EventExecTimeInThePast");
    public static MySqlErrorCode EventOpenTableFailed = getFrom(enumReflected, "EventOpenTableFailed");
    public static MySqlErrorCode EventNeitherMExpresssionNorMAt = getFrom(enumReflected, "EventNeitherMExpresssionNorMAt");
    public static MySqlErrorCode ColumnCountDoesNotMatchCorrupted = getFrom(enumReflected, "ColumnCountDoesNotMatchCorrupted");
    public static MySqlErrorCode CannotLoadFromTable = getFrom(enumReflected, "CannotLoadFromTable");
    public static MySqlErrorCode EventCannotDelete = getFrom(enumReflected, "EventCannotDelete");
    public static MySqlErrorCode EventCompileError = getFrom(enumReflected, "EventCompileError");
    public static MySqlErrorCode EventSameName = getFrom(enumReflected, "EventSameName");
    public static MySqlErrorCode EventDataTooLong = getFrom(enumReflected, "EventDataTooLong");
    public static MySqlErrorCode DropIndexForeignKey = getFrom(enumReflected, "DropIndexForeignKey");
    public static MySqlErrorCode WarningDeprecatedSyntaxWithVersion = getFrom(enumReflected, "WarningDeprecatedSyntaxWithVersion");
    public static MySqlErrorCode CannotWriteLockLogTable = getFrom(enumReflected, "CannotWriteLockLogTable");
    public static MySqlErrorCode CannotLockLogTable = getFrom(enumReflected, "CannotLockLogTable");
    public static MySqlErrorCode ForeignDuplicateKey = getFrom(enumReflected, "ForeignDuplicateKey");
    public static MySqlErrorCode ColumnCountDoesNotMatchPleaseUpdate = getFrom(enumReflected, "ColumnCountDoesNotMatchPleaseUpdate");
    public static MySqlErrorCode TemoraryTablePreventSwitchOutOfRBR = getFrom(enumReflected, "TemoraryTablePreventSwitchOutOfRBR");
    public static MySqlErrorCode StoredFunctionPreventsSwitchBinLogFormat = getFrom(enumReflected, "StoredFunctionPreventsSwitchBinLogFormat");
    public static MySqlErrorCode NDBCannotSwitchBinLogFormat = getFrom(enumReflected, "NDBCannotSwitchBinLogFormat");
    public static MySqlErrorCode PartitionNoTemporary = getFrom(enumReflected, "PartitionNoTemporary");
    public static MySqlErrorCode PartitionConstantDomain = getFrom(enumReflected, "PartitionConstantDomain");
    public static MySqlErrorCode PartitionFunctionIsNotAllowed = getFrom(enumReflected, "PartitionFunctionIsNotAllowed");
    public static MySqlErrorCode DDLLogError = getFrom(enumReflected, "DDLLogError");
    public static MySqlErrorCode NullInValuesLessThan = getFrom(enumReflected, "NullInValuesLessThan");
    public static MySqlErrorCode WrongPartitionName = getFrom(enumReflected, "WrongPartitionName");
    public static MySqlErrorCode CannotChangeTransactionIsolation = getFrom(enumReflected, "CannotChangeTransactionIsolation");
    public static MySqlErrorCode DuplicateEntryAutoIncrementCase = getFrom(enumReflected, "DuplicateEntryAutoIncrementCase");
    public static MySqlErrorCode EventModifyQueueError = getFrom(enumReflected, "EventModifyQueueError");
    public static MySqlErrorCode EventSetVariableError = getFrom(enumReflected, "EventSetVariableError");
    public static MySqlErrorCode PartitionMergeError = getFrom(enumReflected, "PartitionMergeError");
    public static MySqlErrorCode CannotActivateLog = getFrom(enumReflected, "CannotActivateLog");
    public static MySqlErrorCode RBRNotAvailable = getFrom(enumReflected, "RBRNotAvailable");
    public static MySqlErrorCode Base64DecodeError = getFrom(enumReflected, "Base64DecodeError");
    public static MySqlErrorCode EventRecursionForbidden = getFrom(enumReflected, "EventRecursionForbidden");
    public static MySqlErrorCode EventsDatabaseError = getFrom(enumReflected, "EventsDatabaseError");
    public static MySqlErrorCode OnlyIntegersAllowed = getFrom(enumReflected, "OnlyIntegersAllowed");
    public static MySqlErrorCode UnsupportedLogEngine = getFrom(enumReflected, "UnsupportedLogEngine");
    public static MySqlErrorCode BadLogStatement = getFrom(enumReflected, "BadLogStatement");
    public static MySqlErrorCode CannotRenameLogTable = getFrom(enumReflected, "CannotRenameLogTable");
    public static MySqlErrorCode WrongParameterCountToNativeFCT = getFrom(enumReflected, "WrongParameterCountToNativeFCT");
    public static MySqlErrorCode WrongParametersToNativeFCT = getFrom(enumReflected, "WrongParametersToNativeFCT");
    public static MySqlErrorCode WrongParametersToStoredFCT = getFrom(enumReflected, "WrongParametersToStoredFCT");
    public static MySqlErrorCode NativeFCTNameCollision = getFrom(enumReflected, "NativeFCTNameCollision");
    public static MySqlErrorCode DuplicateEntryWithKeyName = getFrom(enumReflected, "DuplicateEntryWithKeyName");
    public static MySqlErrorCode BinLogPurgeEMFile = getFrom(enumReflected, "BinLogPurgeEMFile");
    public static MySqlErrorCode EventCannotCreateInThePast = getFrom(enumReflected, "EventCannotCreateInThePast");
    public static MySqlErrorCode EventCannotAlterInThePast = getFrom(enumReflected, "EventCannotAlterInThePast");
    public static MySqlErrorCode SlaveIncident = getFrom(enumReflected, "SlaveIncident");
    public static MySqlErrorCode NoPartitionForGivenValueSilent = getFrom(enumReflected, "NoPartitionForGivenValueSilent");
    public static MySqlErrorCode BinLogUnsafeStatement = getFrom(enumReflected, "BinLogUnsafeStatement");
    public static MySqlErrorCode SlaveFatalError = getFrom(enumReflected, "SlaveFatalError");
    public static MySqlErrorCode SlaveRelayLogReadFailure = getFrom(enumReflected, "SlaveRelayLogReadFailure");
    public static MySqlErrorCode SlaveRelayLogWriteFailure = getFrom(enumReflected, "SlaveRelayLogWriteFailure");
    public static MySqlErrorCode SlaveCreateEventFailure = getFrom(enumReflected, "SlaveCreateEventFailure");
    public static MySqlErrorCode SlaveMasterComFailure = getFrom(enumReflected, "SlaveMasterComFailure");
    public static MySqlErrorCode BinLogLoggingImpossible = getFrom(enumReflected, "BinLogLoggingImpossible");
    public static MySqlErrorCode ViewNoCreationContext = getFrom(enumReflected, "ViewNoCreationContext");
    public static MySqlErrorCode ViewInvalidCreationContext = getFrom(enumReflected, "ViewInvalidCreationContext");
    public static MySqlErrorCode StoredRoutineInvalidCreateionContext = getFrom(enumReflected, "StoredRoutineInvalidCreateionContext");
    public static MySqlErrorCode TiggerCorruptedFile = getFrom(enumReflected, "TiggerCorruptedFile");
    public static MySqlErrorCode TriggerNoCreationContext = getFrom(enumReflected, "TriggerNoCreationContext");
    public static MySqlErrorCode TriggerInvalidCreationContext = getFrom(enumReflected, "TriggerInvalidCreationContext");
    public static MySqlErrorCode EventInvalidCreationContext = getFrom(enumReflected, "EventInvalidCreationContext");
    public static MySqlErrorCode TriggerCannotOpenTable = getFrom(enumReflected, "TriggerCannotOpenTable");
    public static MySqlErrorCode CannoCreateSubRoutine = getFrom(enumReflected, "CannoCreateSubRoutine");
    public static MySqlErrorCode SlaveAmbiguousExecMode = getFrom(enumReflected, "SlaveAmbiguousExecMode");
    public static MySqlErrorCode NoFormatDescriptionEventBeforeBinLogStatement = getFrom(enumReflected, "NoFormatDescriptionEventBeforeBinLogStatement");
    public static MySqlErrorCode SlaveCorruptEvent = getFrom(enumReflected, "SlaveCorruptEvent");
    public static MySqlErrorCode LoadDataInvalidColumn = getFrom(enumReflected, "LoadDataInvalidColumn");
    public static MySqlErrorCode LogPurgeNoFile = getFrom(enumReflected, "LogPurgeNoFile");
    public static MySqlErrorCode XARBTimeout = getFrom(enumReflected, "XARBTimeout");
    public static MySqlErrorCode XARBDeadlock = getFrom(enumReflected, "XARBDeadlock");
    public static MySqlErrorCode NeedRePrepare = getFrom(enumReflected, "NeedRePrepare");
    public static MySqlErrorCode DelayedNotSupported = getFrom(enumReflected, "DelayedNotSupported");
    public static MySqlErrorCode WarningNoMasterInfo = getFrom(enumReflected, "WarningNoMasterInfo");
    public static MySqlErrorCode WarningOptionIgnored = getFrom(enumReflected, "WarningOptionIgnored");
    public static MySqlErrorCode WarningPluginDeleteBuiltIn = getFrom(enumReflected, "WarningPluginDeleteBuiltIn");
    public static MySqlErrorCode WarningPluginBusy = getFrom(enumReflected, "WarningPluginBusy");
    public static MySqlErrorCode VariableIsReadonly = getFrom(enumReflected, "VariableIsReadonly");
    public static MySqlErrorCode WarningEngineTransactionRollback = getFrom(enumReflected, "WarningEngineTransactionRollback");
    public static MySqlErrorCode SlaveHeartbeatFailure = getFrom(enumReflected, "SlaveHeartbeatFailure");
    public static MySqlErrorCode SlaveHeartbeatValueOutOfRange = getFrom(enumReflected, "SlaveHeartbeatValueOutOfRange");
    public static MySqlErrorCode NDBReplicationSchemaError = getFrom(enumReflected, "NDBReplicationSchemaError");
    public static MySqlErrorCode ConflictFunctionParseError = getFrom(enumReflected, "ConflictFunctionParseError");
    public static MySqlErrorCode ExcepionsWriteError = getFrom(enumReflected, "ExcepionsWriteError");
    public static MySqlErrorCode TooLongTableComment = getFrom(enumReflected, "TooLongTableComment");
    public static MySqlErrorCode TooLongFieldComment = getFrom(enumReflected, "TooLongFieldComment");
    public static MySqlErrorCode FunctionInExistentNameCollision = getFrom(enumReflected, "FunctionInExistentNameCollision");
    public static MySqlErrorCode DatabaseNameError = getFrom(enumReflected, "DatabaseNameError");
    public static MySqlErrorCode TableNameErrror = getFrom(enumReflected, "TableNameErrror");
    public static MySqlErrorCode PartitionNameError = getFrom(enumReflected, "PartitionNameError");
    public static MySqlErrorCode SubPartitionNameError = getFrom(enumReflected, "SubPartitionNameError");
    public static MySqlErrorCode TemporaryNameError = getFrom(enumReflected, "TemporaryNameError");
    public static MySqlErrorCode RenamedNameError = getFrom(enumReflected, "RenamedNameError");
    public static MySqlErrorCode TooManyConcurrentTransactions = getFrom(enumReflected, "TooManyConcurrentTransactions");
    public static MySqlErrorCode WarningNonASCIISeparatorNotImplemented = getFrom(enumReflected, "WarningNonASCIISeparatorNotImplemented");
    public static MySqlErrorCode DebugSyncTimeout = getFrom(enumReflected, "DebugSyncTimeout");
    public static MySqlErrorCode DebugSyncHitLimit = getFrom(enumReflected, "DebugSyncHitLimit");
    public static MySqlErrorCode ErrorLast = getFrom(enumReflected, "ErrorLast");


    // Flags management section


}